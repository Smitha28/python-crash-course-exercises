{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Dictionaries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "green\n",
      "5\n"
     ]
    }
   ],
   "source": [
    "alien_0={'color': 'green', 'points': 5}\n",
    "\n",
    "print(alien_0['color'])\n",
    "print(alien_0['points'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "You just earned 5 points!\n"
     ]
    }
   ],
   "source": [
    "alien_0={'color': 'green', 'points': 5}\n",
    "\n",
    "print(\"You just earned \"+str(alien_0['points'])+\" points!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'color': 'green', 'points': 5}\n",
      "{'color': 'green', 'points': 5, 'x_position': 0, 'y_position': 0}\n"
     ]
    }
   ],
   "source": [
    "alien_0={'color': 'green', 'points': 5}\n",
    "print(alien_0)\n",
    "\n",
    "alien_0['x_position']=0\n",
    "alien_0['y_position']=0\n",
    "print(alien_0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Original x-position: 0\n",
      "New x_position: 2\n"
     ]
    }
   ],
   "source": [
    "alien_0={'x_position':0, 'y_position':25, 'speed':'medium'}\n",
    "print(\"Original x-position: \"+str(alien_0['x_position']))\n",
    "\n",
    "#move alien to the right\n",
    "#Determine how far to move the alien based on its current speed\n",
    "\n",
    "if alien_0['speed']=='slow':\n",
    "    x_increment=1\n",
    "elif alien_0['speed']=='medium':\n",
    "    x_increment=2\n",
    "else: \n",
    "    x_increment=3\n",
    "    \n",
    "alien_0['x_position']=alien_0['x_position']+x_increment \n",
    "\n",
    "print(\"New x_position: \"+str(alien_0['x_position']))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'color': 'green', 'points': 5}\n",
      "{'color': 'green'}\n"
     ]
    }
   ],
   "source": [
    "alien_0={'color': 'green', 'points': 5}\n",
    "print(alien_0)\n",
    "\n",
    "del alien_0['points']\n",
    "print(alien_0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'jen': 'python', 'sarah': 'c', 'edward': 'ruby', 'phil': 'python'}\n"
     ]
    }
   ],
   "source": [
    "fav_lang={\n",
    "    'jen': 'python', \n",
    "    'sarah': 'c',\n",
    "'edward': 'ruby',\n",
    "'phil': 'python',\n",
    "}\n",
    "\n",
    "print(fav_lang)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sarah's fav language is C.\n"
     ]
    }
   ],
   "source": [
    "fav_lang={\n",
    "    'jen': 'python', \n",
    "    'sarah': 'c',\n",
    "'edward': 'ruby',\n",
    "'phil': 'python',\n",
    "}\n",
    "\n",
    "print(\"Sarah's fav language is \"+fav_lang['sarah'].title()+\".\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'first_name': 'Arjun', 'Last_name': 'Singh', 'city': 'jaipur'}\n"
     ]
    }
   ],
   "source": [
    "#Exercise 6-1 Person\n",
    "\n",
    "person={ 'first_name':'Arjun', 'Last_name':'Singh', 'city': 'jaipur'}\n",
    "\n",
    "print(person)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Key: username\n",
      "Value: efermi\n",
      "\n",
      "Key: first\n",
      "Value: enrico\n",
      "\n",
      "Key: last\n",
      "Value: fermi\n"
     ]
    }
   ],
   "source": [
    "user_0={\n",
    "    'username': 'efermi',\n",
    "    'first': 'enrico', \n",
    "    'last':'fermi'}\n",
    "\n",
    "for k,v in user_0.items():\n",
    "    print(\"\\nKey: \"+k)\n",
    "    print(\"Value: \"+v)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Jen\n",
      "Sarah\n",
      "Hi Sarah, I see your fav language is C.\n",
      "Edward\n",
      "Phil\n",
      "Hi Phil, I see your fav language is Python.\n"
     ]
    }
   ],
   "source": [
    "fav_lang={\n",
    "    'jen': 'python', \n",
    "    'sarah': 'c',\n",
    "'edward': 'ruby',\n",
    "'phil': 'python',\n",
    "}\n",
    "\n",
    "friends=['phil', 'sarah']\n",
    "for name in fav_lang:\n",
    "    print(name.title())\n",
    "    \n",
    "    if name in friends:\n",
    "        print(\"Hi \"+name.title()+\", I see your fav language is \"+fav_lang[name].title()+\".\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Edward, thank you for taking the poll.\n",
      "\n",
      "Jen, thank you for taking the poll.\n",
      "\n",
      "Phil, thank you for taking the poll.\n",
      "\n",
      "Sarah, thank you for taking the poll.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "fav_lang={\n",
    "    'jen': 'python', \n",
    "    'sarah': 'c',\n",
    "'edward': 'ruby',\n",
    "'phil': 'python',\n",
    "}\n",
    "\n",
    "for name in sorted(fav_lang):\n",
    "    print(name.title()+\", thank you for taking the poll.\\n\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Python\n",
      "Ruby\n",
      "C\n"
     ]
    }
   ],
   "source": [
    "fav_lang={\n",
    "    'jen': 'python', \n",
    "    'sarah': 'c',\n",
    "'edward': 'ruby',\n",
    "'phil': 'python',\n",
    "}\n",
    "\n",
    "for lang in set(fav_lang.values()):\n",
    "    print(lang.title())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Mississippi runs through USA.\n",
      "The Nile runs through EGYPT.\n",
      "The Yamuna runs through INDIA.\n"
     ]
    }
   ],
   "source": [
    "#Exercise 6-5 Rivers\n",
    "\n",
    "rivers={'mississippi':'usa', \n",
    "        'nile':'egypt',\n",
    "        'yamuna':'india'\n",
    "       }\n",
    "\n",
    "for river, country in rivers.items():\n",
    "    print(\"The \"+river.title() +\" runs through \"+country.upper() +\".\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'colour': 'green', 'points': '5', 'speed': 'slow'}\n",
      "...\n",
      "{'colour': 'green', 'points': '5', 'speed': 'slow'}\n",
      "...\n",
      "{'colour': 'green', 'points': '5', 'speed': 'slow'}\n",
      "...\n",
      "{'colour': 'green', 'points': '5', 'speed': 'slow'}\n",
      "...\n",
      "{'colour': 'green', 'points': '5', 'speed': 'slow'}\n",
      "...\n",
      "Total # of aliens: 30\n"
     ]
    }
   ],
   "source": [
    "aliens=[]\n",
    "\n",
    "for alien_number in range(30):\n",
    "    new_alien={'colour':'green', 'points':'5', 'speed':'slow'}\n",
    "    aliens.append(new_alien)\n",
    "    \n",
    "for alien in aliens[:5]:\n",
    "    print(alien)\n",
    "    print(\"...\")\n",
    "    \n",
    "print(\"Total # of aliens: \"+str(len(aliens)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'colour': 'yellow', 'points': 10, 'speed': 'medium'}\n",
      "...\n",
      "{'colour': 'yellow', 'points': 10, 'speed': 'medium'}\n",
      "...\n",
      "{'colour': 'yellow', 'points': 10, 'speed': 'medium'}\n",
      "...\n",
      "{'colour': 'green', 'points': '5', 'speed': 'slow'}\n",
      "...\n",
      "{'colour': 'green', 'points': '5', 'speed': 'slow'}\n",
      "...\n",
      "Total # of aliens: 30\n"
     ]
    }
   ],
   "source": [
    "aliens=[]\n",
    "\n",
    "for alien_number in range(30):\n",
    "    new_alien={'colour':'green', 'points':'5', 'speed':'slow'}\n",
    "    aliens.append(new_alien)\n",
    "    \n",
    "for alien in aliens[0:3]:\n",
    "    if alien['colour']=='green':\n",
    "        alien['colour']='yellow'\n",
    "        alien['speed']='medium'\n",
    "        alien['points']=10\n",
    "for alien in aliens[:5]:\n",
    "    print(alien)\n",
    "    print(\"...\")\n",
    "    \n",
    "print(\"Total # of aliens: \"+str(len(aliens)))     \n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "You ordered a pizza with thick crust. And the following toppings:\n",
      "\tmushrooms\n",
      "\textra cheese\n"
     ]
    }
   ],
   "source": [
    "pizza={'crust':'thick',\n",
    "      'toppings':['mushrooms', 'extra cheese'],\n",
    "      }\n",
    "print(\"You ordered a pizza with \"+pizza['crust']+\" crust. And the following toppings:\")\n",
    "for topping in pizza['toppings']:\n",
    "    print(\"\\t\"+topping)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Jen's favourite languages are:\n",
      "\tPython\n",
      "\tRuby\n",
      "\n",
      "Sarah's favourite languages are:\n",
      "\tC\n",
      "\n",
      "Edward's favourite languages are:\n",
      "\tRuby\n",
      "\tGo\n",
      "\n",
      "Phil's favourite languages are:\n",
      "\tPython\n",
      "\tHaskell\n"
     ]
    }
   ],
   "source": [
    "fav_lang={\n",
    "    'jen':['python', 'ruby'],\n",
    "    'sarah':['c'],\n",
    "    'edward': ['ruby', 'go'],\n",
    "    'phil':['python', 'haskell'],\n",
    "}\n",
    "\n",
    "for name, lang in fav_lang.items():\n",
    "    print(\"\\n\"+name.title() +\"'s favourite languages are:\")\n",
    "    for lang in lang:\n",
    "        print(\"\\t\"+lang.title())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Username: aeinstein\n",
      "\t Full name: Albert Einstein\n",
      "\t Location: Princeton\n",
      "\n",
      "Username: mcurie\n",
      "\t Full name: Marie Curie\n",
      "\t Location: Paris\n"
     ]
    }
   ],
   "source": [
    "users={\n",
    "    'aeinstein':{\n",
    "        'first': 'albert',\n",
    "        'last': 'einstein',\n",
    "        'location': 'princeton',\n",
    "    },\n",
    "    'mcurie':{\n",
    "        'first': 'marie',\n",
    "        'last': 'curie',\n",
    "        'location': 'paris',\n",
    "    },\n",
    "}\n",
    "\n",
    "for username, user_info in users.items():\n",
    "    print(\"\\nUsername: \"+username)\n",
    "    full_name=user_info['first']+\" \"+user_info['last']\n",
    "    location=user_info['location']\n",
    "    \n",
    "    print(\"\\t Full name: \"+full_name.title())\n",
    "    print(\"\\t Location: \"+location.title())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#THE END"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
