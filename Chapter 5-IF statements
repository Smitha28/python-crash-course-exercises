{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "BMW\n",
      "Audi\n",
      "Subaru\n",
      "Toyota\n"
     ]
    }
   ],
   "source": [
    "#if statements \n",
    "\n",
    "cars =['bmw', 'audi', 'subaru', 'toyota']\n",
    "\n",
    "for car in cars:\n",
    "    if car == 'bmw':\n",
    "        print(car.upper())\n",
    "    else:\n",
    "        print(car.title())\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "car = 'audi'\n",
    "car =='bmw'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "hold the anchovies!\n"
     ]
    }
   ],
   "source": [
    "requested_topping ='mushrooms'\n",
    "\n",
    "if requested_topping != 'anchovies':\n",
    "    print(\"hold the anchovies!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "That is not the correct answer. Please try again!\n"
     ]
    }
   ],
   "source": [
    "answer =15\n",
    "\n",
    "if answer != 45:\n",
    "    print(\"That is not the correct answer. Please try again!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "age_0=22\n",
    "age_1=18\n",
    "age_0>=21 and age_1>=21"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "requested_toppings=['mushrooms', 'onions', 'pineapple']\n",
    "'mushrooms' in requested_toppings"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'cheese' in requested_toppings"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'cheese' not in requested_toppings"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'mushrooms' not in requested_toppings"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "you are old enough to vote!\n"
     ]
    }
   ],
   "source": [
    "age=18\n",
    "if age >=18:\n",
    "    print(\"you are old enough to vote!\")\n",
    "else:\n",
    "    print(\"You are not old enought to vote!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "age=5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "You are not old enought to vote!\n"
     ]
    }
   ],
   "source": [
    "if age >=18:\n",
    "    print(\"you are old enough to vote!\")\n",
    "else:\n",
    "    print(\"You are not old enought to vote!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "You are not old enought to vote!\n",
      " \n",
      "Register to vote as soon as you turn 18\n"
     ]
    }
   ],
   "source": [
    "if age >=18:\n",
    "    print(\"you are old enough to vote!\")\n",
    "else:\n",
    "    print(\"You are not old enought to vote!\\n \")\n",
    "    print(\"Register to vote as soon as you turn 18\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Your admission cost is $5\n"
     ]
    }
   ],
   "source": [
    "age=12\n",
    "\n",
    "if age <4:\n",
    "    print(\"You can be admitted for free!\")\n",
    "elif age < 18:\n",
    "    print(\"Your admission cost is $5\")\n",
    "else: \n",
    "    print(\"Your admission cost is $10\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Your admission cost is $5.\n"
     ]
    }
   ],
   "source": [
    "age=12\n",
    "if age<4:\n",
    "    price=0\n",
    "elif age<18:\n",
    "    price=5\n",
    "else: \n",
    "    price=10\n",
    "print(\"Your admission cost is $\"+str(price)+\".\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "You earned nothing\n"
     ]
    }
   ],
   "source": [
    "#Exercise 5-3: Alien Colors\n",
    "\n",
    "alien_color='orange'\n",
    "\n",
    "if alien_color == 'green':\n",
    "    print(\"You just earned 5 points!\")\n",
    "else: \n",
    "    print('You earned nothing')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "You have just earned 10 points!\n"
     ]
    }
   ],
   "source": [
    "#Exercise 5-4 Alien Colors#2\n",
    "\n",
    "alien_color ='orange'\n",
    "\n",
    "if alien_color=='green':\n",
    "    points=5\n",
    "elif alien_color=='orange':\n",
    "    points=10\n",
    "print(\"You have just earned \"+str(points)+\" points!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "You have just earned 5 points!\n"
     ]
    }
   ],
   "source": [
    "alien_color ='green'\n",
    "\n",
    "if alien_color=='green':\n",
    "    points=5\n",
    "elif alien_color=='orange':\n",
    "    points=10\n",
    "print(\"You have just earned \"+str(points)+\" points!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "You have just earned 5 points!\n"
     ]
    }
   ],
   "source": [
    "#Exercise 5-5 Alien Colors#3\n",
    "\n",
    "alien_color ='green'\n",
    "\n",
    "if alien_color=='green':\n",
    "    points=5\n",
    "elif alien_color=='yellow':\n",
    "    points=10\n",
    "elif alien_color=='red':\n",
    "    points=15\n",
    "    \n",
    "print(\"You have just earned \"+str(points)+\" points!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "You have just earned 10 points!\n"
     ]
    }
   ],
   "source": [
    "alien_color='yellow'\n",
    "\n",
    "if alien_color=='green':\n",
    "    points=5\n",
    "elif alien_color=='yellow':\n",
    "    points=10\n",
    "elif alien_color=='red':\n",
    "    points=15\n",
    "    \n",
    "print(\"You have just earned \"+str(points)+\" points!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "You have just earned 15 points!\n"
     ]
    }
   ],
   "source": [
    "alien_color='red'\n",
    "\n",
    "if alien_color=='green':\n",
    "    points=5\n",
    "elif alien_color=='yellow':\n",
    "    points=10\n",
    "elif alien_color=='red':\n",
    "    points=15\n",
    "    \n",
    "print(\"You have just earned \"+str(points)+\" points!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Adding mushrooms.\n",
      "Sorry, we are out of green peppers right now.\n",
      "Adding extra cheese.\n",
      "\n",
      " Finished making your pizza!\n"
     ]
    }
   ],
   "source": [
    "requested_toppings=['mushrooms', 'green peppers', 'extra cheese']\n",
    "\n",
    "for requested_topping in requested_toppings: \n",
    "    if requested_topping =='green peppers':\n",
    "        print(\"Sorry, we are out of green peppers right now.\")\n",
    "    else:\n",
    "        print(\"Adding \"+requested_topping+\".\")\n",
    "\n",
    "print(\"\\n Finished making your pizza!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello admin, would you like to see a status report?\n",
      "Hello smitha, you have just logged in.\n",
      "Hello arjun, you have just logged in.\n",
      "Hello shreya, you have just logged in.\n",
      "Hello pooja, you have just logged in.\n"
     ]
    }
   ],
   "source": [
    "#Exercise 5-8 Hello Admin\n",
    "usernames = ['admin','smitha', 'arjun', 'shreya', 'pooja']\n",
    "for username in usernames:\n",
    "    if username =='admin':\n",
    "        print(\"Hello admin, would you like to see a status report?\")\n",
    "    else:\n",
    "        print(\"Hello \"+username+\", you have just logged in.\")\n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello admin, would you like to see a status report?\n",
      "Hello smitha, you have just logged in.\n",
      "Hello arjun, you have just logged in.\n",
      "Hello shreya, you have just logged in.\n",
      "Hello pooja, you have just logged in.\n"
     ]
    }
   ],
   "source": [
    "#Exercise 5-9 No Users\n",
    "\n",
    "usernames = ['admin','smitha', 'arjun', 'shreya', 'pooja']\n",
    "if usernames:\n",
    "    for username in usernames:\n",
    "        if username =='admin':\n",
    "            print(\"Hello admin, would you like to see a status report?\")\n",
    "        else:\n",
    "            print(\"Hello \"+username+\", you have just logged in.\")\n",
    "else:\n",
    "    print(\"We need to find some users!\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "We need to find some users!\n"
     ]
    }
   ],
   "source": [
    "usernames=[]\n",
    "if usernames:\n",
    "    for username in usernames:\n",
    "        if username =='admin':\n",
    "            print(\"Hello admin, would you like to see a status report?\")\n",
    "        else:\n",
    "            print(\"Hello \"+username+\", you have just logged in.\")\n",
    "else:\n",
    "    print(\"We need to find some users!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The username admin has already been used. Please choose another one.\n",
      "The username smitha has already been used. Please choose another one.\n",
      "The username akshay is available.\n",
      "The username abhi is available.\n",
      "The username amit is available.\n"
     ]
    }
   ],
   "source": [
    "#Exercise 5-10 Checking Usernames\n",
    "\n",
    "current_users=['admin', 'smitha', 'arjun', 'atul', 'vishal', 'nabeel']\n",
    "new_users=['admin', 'smitha', 'akshay', 'abhi', 'amit']\n",
    "\n",
    "for new_user in new_users:\n",
    "    if new_user.lower() in current_users:\n",
    "        print(\"The username \"+new_user+\" has already been used. Please choose another one.\")\n",
    "    else:\n",
    "        print(\"The username \"+new_user+\" is available.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The username admin has already been used. Please choose another one.\n",
      "The username SMITHA has already been used. Please choose another one.\n",
      "The username akshay is available.\n",
      "The username abhi is available.\n",
      "The username amit is available.\n"
     ]
    }
   ],
   "source": [
    "current_users=['admin', 'smitha', 'arjun', 'atul', 'vishal', 'nabeel']\n",
    "new_users=['admin', 'SMITHA', 'akshay', 'abhi', 'amit']\n",
    "\n",
    "for new_user in new_users:\n",
    "    if new_user.lower() in current_users:\n",
    "        print(\"The username \"+new_user+\" has already been used. Please choose another one.\")\n",
    "    else:\n",
    "        print(\"The username \"+new_user+\" is available.\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1st\n",
      "\n",
      "2nd\n",
      "\n",
      "3rd\n",
      "\n",
      "4th\n",
      "\n",
      "5th\n",
      "\n",
      "6th\n",
      "\n",
      "7th\n",
      "\n",
      "8th\n",
      "\n",
      "9th\n",
      "\n"
     ]
    }
   ],
   "source": [
    "#5-11 Ordinal Numbers\n",
    "\n",
    "numbers=['1','2','3','4','5','6','7','8','9']\n",
    "\n",
    "for number in numbers:\n",
    "    if number =='1':\n",
    "        print(number+\"st\\n\")\n",
    "    elif number =='2':\n",
    "        print(number+\"nd\\n\")\n",
    "    elif number =='3':\n",
    "        print(number+\"rd\\n\")\n",
    "    else:\n",
    "        print(number+\"th\\n\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
